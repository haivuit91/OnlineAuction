<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd">

	<context:component-scan base-package="com.asiantech.haivu.onlineauction" />
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:argument-resolvers>
			<ref bean="sortResolver" />
			<ref bean="pageableResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- Conversion -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<bean class="com.asiantech.haivu.onlineauction.formatter.CategorySubFormatter" />
				<bean class="com.asiantech.haivu.onlineauction.formatter.CategoryFormatter" />
			</set>
		</property>
	</bean>

	<!-- Thymeleaf -->
	<bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="cacheable" value="false" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<property name="additionalDialects">
			<set>
				<bean
					class="org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect" />
			</set>
		</property>
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Connect Database by Spring Data JPA -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/online_auction" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="com.asiantech.haivu.onlineauction.model" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
		<property name="generateDdl" value="true" />
		<property name="showSql" value="false" />
		<property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="sortResolver"
		class="org.springframework.data.web.SortHandlerMethodArgumentResolver" />

	<bean id="pageableResolver"
		class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
		<constructor-arg ref="sortResolver" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<jpa:repositories base-package="com.asiantech.haivu.onlineauction.repository" />

	<!-- Authentication using a memory user list -->
	<security:global-method-security
		secured-annotations="enabled" />

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="accountService">
			<security:password-encoder ref="encoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="accountService"
		class="com.asiantech.haivu.onlineauction.service.impl.AccountServiceImpl"></bean>

	<bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>

	<security:http pattern="/resources/**" security="none" />

	<security:http auto-config="true" use-expressions="true">
		<!-- Security zones -->
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/user/**"
			access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/item/**"
			access="hasRole('ROLE_USER')" />
		<!-- Login pages -->
		<security:form-login login-processing-url="/account/login"
			login-page="/account/login" authentication-failure-url="/account/login?error"
			authentication-success-handler-ref="authenticationSuccessHandler" />
		<security:remember-me token-validity-seconds="2419200"
			remember-me-parameter="remember-me" />
		<security:logout logout-success-url="/account/login?logout"
			logout-url="/account/logout" delete-cookies="true" />
		<security:csrf disabled="true" />
	</security:http> <!-- 2419200 -->

	<bean id="authenticationSuccessHandler"
		class="com.asiantech.haivu.onlineauction.util.AuthenticationSuccessHandlerCustom" />

	<!-- MailSender -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="25" />
		<property name="username" value="recyclebin1206@gmail.com" />
		<property name="password" value="Haivuit9!" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- Dozer -->
	<bean id="mapper" class="org.dozer.DozerBeanMapper"></bean>
</beans>
